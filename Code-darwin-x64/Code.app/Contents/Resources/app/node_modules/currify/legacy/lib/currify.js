'use strict';

var f = function f(fn) {
    return [
    /*eslint no-unused-vars: 0*/
    function (a) {
        return fn.apply(undefined, arguments);
    }, function (a, b) {
        return fn.apply(undefined, arguments);
    }, function (a, b, c) {
        return fn.apply(undefined, arguments);
    }, function (a, b, c, d) {
        return fn.apply(undefined, arguments);
    }, function (a, b, c, d, e) {
        return fn.apply(undefined, arguments);
    }];
};

module.exports = function currify(fn) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
    }

    check(fn);

    if (args.length >= fn.length) return fn.apply(undefined, args);

    var again = function again() {
        return currify.apply(undefined, [fn].concat(args, Array.prototype.slice.call(arguments)));
    };

    var count = fn.length - args.length - 1;
    var func = f(again)[count];

    return func || again;
};

function check(fn) {
    if (typeof fn !== 'function') throw Error('fn should be function!');
}